{"version":3,"sources":["components/menubar/images/linkedIn.svg","components/menubar/images/git.svg","components/menubar/images/theme.svg","components/sidedrawer/images/latest_photo.jpg","components/spinner/public/spinner.svg","components/menubar/ToggleButton.js","components/menubar/externalIcons.js","components/menubar/Menubar.js","apiCaller.js","components/spinner/spinner.js","components/sidedrawer/sideDrawer.js","components/backdrop/backDrop.js","pages/projects/Projects.js","pages/Home/Home.js","pages/resume/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ToggleButton","props","className","onClick","pageActions","toggleDrawer","ExternalIcons","onMouseLeave","event","setState","mouseOver","clickAction","url","toggleSpinner","window","location","href","switchTheme","isLight","state","currentTheme","theme","darkTheme","lightTheme","Object","keys","forEach","key","value","document","documentElement","style","setProperty","openClassForGit","openClassForLinkedIn","openClassForTheme","this","title","src","alt","onMouseOver","git","image","Component","Menubar","callAPI","a","httpMethod","headers","requestBody","undefined","requestParams","method","mode","body","JSON","stringify","fetch","basepath","response","json","LoadingIndicator","data","spinner","type","aria-label","SideDrawer","menuData","showSpinner","apiCaller","console","log","openOrNot","map","to","BackDrop","Projects","Home","fontSize","App","drawOpen","backDrop","path","component","exact","Resume","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,qC,6WCY5BC,G,kBARM,SAACC,GAAD,OACjB,4BAAQC,UAAU,UAAUC,QAASF,EAAMG,YAAYC,cACnD,yBAAKH,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,mB,2DCFFI,G,kBACjB,WAAYL,GAAQ,IAAD,8BACf,4CAAMA,KAoBVM,aAAe,SAACC,GACZ,EAAKC,SAAL,eAAiBD,EAAQ,MAtBV,EAwBnBE,UAAY,SAACF,GACT,EAAKC,SAAL,eAAiBD,EAAQ,sBAzBV,EA2BnBG,YAAc,SAACC,GACX,EAAKX,MAAMG,YAAYS,gBACvBC,OAAOC,SAASC,KAAOJ,GA7BR,EA+BnBK,YAAc,WACV,IAAIC,EAAsC,UAA5B,EAAKC,MAAMC,aACrBC,EAAQH,EAAU,EAAKC,MAAMG,UAAY,EAAKH,MAAMI,WACxD,EAAKd,SAAS,CAAEW,aAAeF,EAAU,OAAS,UAClDM,OAAOC,KAAKJ,GAAOK,SAAQ,SAAAC,GACvB,IAAMC,EAAQP,EAAMM,GACpBE,SAASC,gBAAgBC,MAAMC,YAAYL,EAAKC,OAnCpD,EAAKT,MAAQ,CACTc,gBAAiB,GACjBC,qBAAsB,GACtBC,kBAAmB,GACnBf,aAAc,QACdE,UAAW,CACP,qBAAsB,sBACtB,oBAAqB,QACrB,gBAAiB,oBACjB,mBAAoB,qBAExBC,WAAY,CACR,qBAAsB,QACtB,oBAAqB,sBACrB,gBAAiB,wBACjB,mBAAoB,YAjBb,E,sEAwCT,IAAD,OACL,OACI,6BACI,yBAAKrB,UAAW,WAAakC,KAAKjB,MAAMgB,kBAAmBE,MAAM,eAAeC,IAAKjB,IAAOkB,IAAI,eAAeC,YAAa,kBAAM,EAAK9B,UAAU,sBAC7IH,aAAc,WAAQ,EAAKA,aAAa,sBACxCJ,QAASiC,KAAKnB,cAClB,yBAAKf,UAAW,WAAakC,KAAKjB,MAAMc,gBAAiBO,YAAa,kBAAM,EAAK9B,UAAU,oBACvFH,aAAc,WAAQ,EAAKA,aAAa,oBACxCJ,QAAS,WAAQ,EAAKQ,YAAY,gCAClC2B,IAAKG,IAAKF,IAAI,kBAClB,yBAAKrC,UAAW,WAAakC,KAAKjB,MAAMe,qBAAsBI,IAAKI,IAC/DH,IAAI,WAAWC,YAAa,kBAAM,EAAK9B,UAAU,yBACjDP,QAAS,WAAQ,EAAKQ,YAAY,mDAClCJ,aAAc,WAAQ,EAAKA,aAAa,gC,GAtDjBoC,cCDtBC,E,iLAGb,OACI,4BAAQ1C,UAAU,UACd,yBAAKA,UAAU,eACX,kBAAC,EAAD,CAAcE,YAAagC,KAAKnC,MAAMG,cACtC,yBAAKF,UAAU,eACX,kBAAC,EAAD,CAAeE,YAAagC,KAAKnC,MAAMG,qB,GAR1BuC,a,0DCL/BE,EAAO,uCAAG,WAAOjC,GAAP,mCAAAkC,EAAA,6DAAYC,EAAZ,+BAAyB,MAAOC,EAAhC,+BAA0C,CAAC,eAAgB,oBAAqBC,EAAhF,oCAA8FC,EACtGC,EAAgB,CAChBC,OAAQL,EACRM,KAAM,OACNL,QAASA,EACTM,KAAMC,KAAKC,UAAUP,IALb,SAOSQ,MAAMC,IAAW9C,EAAIuC,GAP9B,cAORQ,EAPQ,gBAQCA,EAASC,OARV,oFAAH,sDAePF,EAAW,WACb,MAAO,8BAGI,GAACb,W,iBCRDgB,G,MANU,SAAC5D,GACtB,OACI,4BAAQ6D,KAAMC,IAASC,KAAK,gBAAgBC,aAAW,aAAa/D,UAAU,uBCiDvEgE,E,YA/CX,WAAYjE,GAAQ,IAAD,8BACf,4CAAMA,KACDkB,MAAQ,CACTgD,SAAU,CACN,KAAO,IACP,OAAS,UACT,SAAW,YAEfC,aAAa,GARF,E,2NAcQC,EAAUxB,QAAQ,S,OAA/BiB,E,OACN1B,KAAK3B,SAAS,CAAE0D,SAAUL,EAAKH,W,gDAE/BW,QAAQC,IAAR,M,QAEJnC,KAAK3B,SAAS,CAAE2D,aAAa,I,8IAI7B,IAAInE,EAAQmC,KAAKnC,MACbkE,EAAW/B,KAAKjB,MAAMgD,SAC1B,OACI,yBAAKjE,UAAWD,EAAMuE,UAAY,cAAgB,UAC9C,yBAAKtE,UAAU,gBACX,yBAAKA,UAAU,gBAAgBoC,IAAKI,IAAOH,IAAI,QAEnD,yBAAKrC,UAAU,eAEPkC,KAAKjB,MAAMiD,YACP,kBAAC,EAAD,MAEAD,GAAY3C,OAAOC,KAAK0C,GAAUM,KAAI,SAAC9C,GACnC,OAAO,kBAAC,IAAD,CAAM+C,GAAIP,EAASxC,IACtB,4BAAQzB,UAAU,aAAaC,QAAS,WAAQF,EAAMG,YAAYC,iBAAmBsB,a,GAtChGgB,aCAVgC,G,MAJE,SAAC1E,GAAD,OACb,yBAAKC,UAAU,WAAWC,QAASF,EAAMI,iBCDxBuE,G,kBACjB,WAAY3E,GAAQ,IAAD,8BACf,4CAAMA,KACDkB,MAAQ,GAFE,E,sEAOf,OACI,6BAASjB,UAAU,aACf,6BAASA,UAAU,iBACf,yBAAKA,UAAU,YACX,6BAASA,UAAU,kBAAnB,iBACA,uBAAGA,UAAU,mBAAb,0HAGR,6BAASA,UAAU,iBACf,yBAAKA,UAAU,YACX,6BAASA,UAAU,kBAAnB,gBACA,uBAAGA,UAAU,mBAAb,+EAGR,6BAASA,UAAU,iBACf,yBAAKA,UAAU,YACX,6BAASA,UAAU,kBAAnB,iBACA,uBAAGA,UAAU,mBAAb,6OAGR,6BAASA,UAAU,iBACf,yBAAKA,UAAU,YACX,6BAASA,UAAU,kBAAnB,WACA,uBAAGA,UAAU,mBAAb,yHAGR,6BAASA,UAAU,iBACf,yBAAKA,UAAU,YACX,6BAASA,UAAU,kBAAnB,+BACA,uBAAGA,UAAU,mBAAb,8E,GArCcyC,cCWvBkC,G,MAXF,SAAC5E,GAAD,OACT,yBAAKC,UAAU,aACX,wBAAIA,UAAU,cAAd,wBACA,iCACI,6BAASA,UAAU,YAAnB,yT,QCJS0C,G,uLAGb,OACI,0BAAM1C,UAAU,eACZ,6BAASA,UAAU,iBACf,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAd,SACA,wBAAI6B,MAAO,CAAE+C,SAAU,QAAvB,uBAEJ,yBAAK5E,UAAU,aACX,4BACI,0CACA,yDAIZ,yBAAKA,UAAU,kBACX,6BAASA,UAAU,qBACf,iCACI,yBAAKA,UAAU,gBACX,8CAGJ,yBAAKA,UAAU,kBACX,8NAKZ,6BAASA,UAAU,qBACf,iCACI,yBAAKA,UAAU,gBACX,gDAGJ,yBAAKA,UAAU,kBACX,kFACA,4BACI,2JACA,4IACA,uGACA,0HACA,yHACA,qIACA,sIACA,yHAIR,yBAAKA,UAAU,kBACX,4EACA,4BACI,mFACA,2F,GAtDCyC,cC2DtBoC,E,YAlDb,WAAY9E,GAAQ,IAAD,8BACjB,4CAAMA,KAMRI,aAAe,WACb,EAAKI,UAAS,SAACR,GAAY,MAAO,CAAE+E,UAAW/E,EAAM+E,cARpC,EAUnBnE,cAAgB,WACd,EAAKJ,UAAS,SAACR,GAAY,MAAO,CAAEmE,aAAcnE,EAAMmE,iBATxD,EAAKjD,MAAQ,CACX6D,UAAU,EACVZ,aAAa,GAJE,E,sEAcjB,IAAIa,EAAW,KACX7C,KAAKjB,MAAM6D,WACbC,EAAW,kBAAC,EAAD,CAAU5E,aAAc+B,KAAK/B,gBAG1C,IAAID,EAAc,CAChBC,aAAc+B,KAAK/B,aACnBQ,cAAeuB,KAAKvB,eAGtB,OACEuB,KAAKjB,MAAMiD,YACT,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,yBAAKlE,UAAU,MAAM6B,MAAO,CAAE,OAAU,SACtC,kBAAC,EAAD,CAAS3B,YAAaA,IACtB,kBAAC,EAAD,CAAYA,YAAaA,EAAaoE,UAAWpC,KAAKjB,MAAM6D,WAC3DC,EACD,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWJ,GAC3B,kBAAC,IAAD,CAAOG,KAAK,IACRE,OAAK,EACLD,UAAWN,IACb,kBAAC,IAAD,CAAOK,KAAK,UACVE,OAAK,EACLD,UAAWE,IACb,kBAAC,IAAD,CAAOH,KAAK,YACVE,OAAK,EACLD,UAAWP,W,GA3CTjC,aCAE2C,QACW,cAA7BxE,OAAOC,SAASwE,UAEe,UAA7BzE,OAAOC,SAASwE,UAEhBzE,OAAOC,SAASwE,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS7D,SAAS8D,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3b10ce4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linkedIn.64050d62.svg\";","module.exports = __webpack_public_path__ + \"static/media/git.1454e8de.svg\";","module.exports = __webpack_public_path__ + \"static/media/theme.61d85715.svg\";","module.exports = __webpack_public_path__ + \"static/media/latest_photo.e20a68ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.c191eeb3.svg\";","import React from 'react'\r\n\r\nimport './css/togglebutton.css'\r\n\r\nconst ToggleButton = (props)=>(\r\n    <button className=\"toggler\" onClick={props.pageActions.toggleDrawer}>\r\n        <div className=\"toggle_line\"></div>\r\n        <div className=\"toggle_line\"></div>\r\n        <div className=\"toggle_line\"></div>\r\n    </button>\r\n);\r\n\r\nexport default ToggleButton;","import React, { Component } from 'react'\r\nimport image from './images/linkedIn.svg'\r\nimport git from './images/git.svg'\r\nimport theme from './images/theme.svg'\r\nimport \"animate.css\"\r\n\r\nexport default class ExternalIcons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openClassForGit: '',\r\n            openClassForLinkedIn: '',\r\n            openClassForTheme: '',\r\n            currentTheme: \"light\",\r\n            darkTheme: {\r\n                \"--color-background\": \"rgba(45,45,45,0.98)\",\r\n                \"--color-textcolor\": \"white\",\r\n                \"--color-theme\": \"rgb(224, 114, 79)\",\r\n                \"--color-gradient\": \"rgb(224, 114, 79)\"\r\n            },\r\n            lightTheme: {\r\n                \"--color-background\": \"white\",\r\n                \"--color-textcolor\": \"rgba(45,45,45,0.98)\",\r\n                \"--color-theme\": \"rgba(11, 122, 231, 1)\",\r\n                \"--color-gradient\": \"#73baf3\"\r\n            },\r\n        }\r\n    }\r\n    onMouseLeave = (event) => {\r\n        this.setState({ [event]: \"\" });\r\n    }\r\n    mouseOver = (event) => {\r\n        this.setState({ [event]: \" animated bounce\" });\r\n    }\r\n    clickAction = (url) => {\r\n        this.props.pageActions.toggleSpinner();\r\n        window.location.href = url\r\n    }\r\n    switchTheme = () => {\r\n        let isLight = this.state.currentTheme === 'light'\r\n        let theme = isLight ? this.state.darkTheme : this.state.lightTheme\r\n        this.setState({ currentTheme : isLight ? \"dark\" : \"light\"});\r\n        Object.keys(theme).forEach(key => {\r\n            const value = theme[key];\r\n            document.documentElement.style.setProperty(key, value);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img className={\"ext_icon\" + this.state.openClassForTheme} title=\"Switch Theme\" src={theme} alt=\"Switch Theme\" onMouseOver={() => this.mouseOver(\"openClassForTheme\")}\r\n                    onMouseLeave={() => { this.onMouseLeave(\"openClassForTheme\") }}\r\n                    onClick={this.switchTheme} />\r\n                <img className={\"ext_icon\" + this.state.openClassForGit} onMouseOver={() => this.mouseOver(\"openClassForGit\")}\r\n                    onMouseLeave={() => { this.onMouseLeave(\"openClassForGit\") }}\r\n                    onClick={() => { this.clickAction(\"https://github.com/bakash95\") }}\r\n                    src={git} alt=\"git goes here\" />\r\n                <img className={\"ext_icon\" + this.state.openClassForLinkedIn} src={image}\r\n                    alt=\"linkedIn\" onMouseOver={() => this.mouseOver(\"openClassForLinkedIn\")}\r\n                    onClick={() => { this.clickAction(\"https://www.linkedin.com/in/akash-b-8675ba155/\") }}\r\n                    onMouseLeave={() => { this.onMouseLeave(\"openClassForLinkedIn\") }} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport './css/Menubar.css'\r\nimport ToggleButton from './ToggleButton'\r\nimport ExternalIcons from './externalIcons'\r\n\r\nexport default class Menubar extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"navbar\">\r\n                <nav className=\"navbar_comp\">\r\n                    <ToggleButton pageActions={this.props.pageActions}/>\r\n                    <div className=\"icon_holder\">\r\n                        <ExternalIcons pageActions={this.props.pageActions}/>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}","const callAPI = async (url, httpMethod = \"GET\", headers = {'Content-Type': 'application/json'}, requestBody = undefined) => {\r\n    let requestParams = {\r\n        method: httpMethod,\r\n        mode: 'cors',\r\n        headers: headers,\r\n        body: JSON.stringify(requestBody)\r\n    }\r\n    let response = await fetch(basepath()+url,requestParams);\r\n    return await response.json();\r\n}\r\n\r\nconst basepathDEV = ()=>{\r\n    return 'http://localhost:3003';\r\n}\r\n\r\nconst basepath = ()=>{\r\n    return 'http://192.168.29.142:8080';\r\n}\r\n\r\nexport default {callAPI};","import React from 'react'\r\nimport spinner from './public/spinner.svg'\r\n\r\nimport './css/spinner.css'\r\n\r\nconst LoadingIndicator = (props) => {\r\n    return (\r\n        <object data={spinner} type=\"image/svg+xml\" aria-label=\"Loading...\" className=\"loadingIndicator\" />\r\n    )\r\n}\r\n\r\nexport default LoadingIndicator","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './css/sideDrawer.css'\r\nimport image from './images/latest_photo.jpg'\r\n\r\nimport apiCaller from '../../apiCaller'\r\nimport LoadingIndicator from '../spinner/spinner'\r\n\r\nclass SideDrawer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuData: {\r\n                \"home\":\"/\",\r\n                \"resume\":\"/resume\",\r\n                \"projects\":\"projects\"\r\n            },\r\n            showSpinner: true,\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        try {\r\n            const data = await apiCaller.callAPI('/menu');\r\n            this.setState({ menuData: data.response })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        this.setState({ showSpinner: false })\r\n    }\r\n\r\n    render() {\r\n        let props = this.props\r\n        let menuData = this.state.menuData\r\n        return (\r\n            <nav className={props.openOrNot ? \"slider open\" : \"slider\"}>\r\n                <div className=\"image_holder\">\r\n                    <img className=\"profile_image\" src={image} alt=\":(\" />\r\n                </div>\r\n                <div className=\"nav_content\">\r\n                    {\r\n                        this.state.showSpinner ?\r\n                            <LoadingIndicator />\r\n                            :\r\n                            menuData && Object.keys(menuData).map((key) => {\r\n                                return <Link to={menuData[key]}>\r\n                                    <button className=\"nav_button\" onClick={() => { props.pageActions.toggleDrawer() }}>{key}</button>\r\n                                </Link>\r\n                            })\r\n                    }\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react'\r\n\r\nimport './css/backDrop.css'\r\n\r\nconst BackDrop = (props)=>(\r\n    <div className=\"backdrop\" onClick={props.toggleDrawer}></div>\r\n);\r\n\r\nexport default BackDrop;","import React, { Component } from 'react'\r\n\r\nimport './css/projects.css'\r\n\r\nexport default class Projects extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"container\">\r\n                <article className=\"cardContainer\">\r\n                    <div className=\"cardText\">\r\n                        <summary className=\"cardTextHeader\">Hospital Mgmt</summary>\r\n                        <p className=\"cardTextContent\">Plain Spring Boot Application with API gateway with URL whitelisting and role based Login with JWT and custom claims</p>\r\n                    </div>\r\n                </article>\r\n                <article className=\"cardContainer\">\r\n                    <div className=\"cardText\">\r\n                        <summary className=\"cardTextHeader\">NewsBulletin</summary>\r\n                        <p className=\"cardTextContent\">A web Application that uses plain vanilla JS for displaying news articles</p>\r\n                    </div>\r\n                </article>\r\n                <article className=\"cardContainer\">\r\n                    <div className=\"cardText\">\r\n                        <summary className=\"cardTextHeader\">Lending Loans</summary>\r\n                        <p className=\"cardTextContent\">A ReactJS Application that displays and filters loans lent to users and has a responsive UI and a powerful search utilising Hibernate Search for filtering and sorting with spring data for storing and retrieving data from a Mysql DB</p>\r\n                    </div>\r\n                </article>\r\n                <article className=\"cardContainer\">\r\n                    <div className=\"cardText\">\r\n                        <summary className=\"cardTextHeader\">BlogApp</summary>\r\n                        <p className=\"cardTextContent\">A BlogApp which is to show articles and also allow to post articles along with a provision to list based on authors</p>\r\n                    </div>\r\n                </article>\r\n                <article className=\"cardContainer\">\r\n                    <div className=\"cardText\">\r\n                        <summary className=\"cardTextHeader\">Spring Security based Login</summary>\r\n                        <p className=\"cardTextContent\">A Spring MVC application with Spring security backed login function</p>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport './css/home.css'\r\n\r\nconst Home = (props) =>(\r\n    <div className=\"container\">\r\n        <h4 className=\"border-btm\">Hi, My Name is Akash</h4>\r\n        <section>\r\n            <article className=\"line-1_7\">\r\n                This is a Application which i Hope will Showcase My Technical Expertise made with ReactJS and Spring Boot Backend,The WebApp will be responsive with a option to Switch themes and customized Scrollbars, you can view my resume and set of projects under my belt and a link to my LinkedIN and Github profile..\r\n            </article>\r\n        </section>\r\n    </div>\r\n);\r\n\r\nexport default Home","import React, { Component } from 'react'\r\n\r\nimport './css/resume.css'\r\n\r\nexport default class Menubar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"main-inline\">\r\n                <section className=\"header_resume\">\r\n                    <div className=\"flt-left\">\r\n                        <h1 className=\"name-headr\">Akash</h1>\r\n                        <h2 style={{ fontSize: \"1em\" }}>Software Developer</h2>\r\n                    </div>\r\n                    <div className=\"flt-right\">\r\n                        <ul>\r\n                            <li>8056138749</li>\r\n                            <li>bakash050695@gmail.com</li>\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n                <div className=\"margin-section\">\r\n                    <section className=\"section-container\">\r\n                        <article>\r\n                            <div className=\"sectionTitle\">\r\n                                <h1>Resume Sumary</h1>\r\n                            </div>\r\n\r\n                            <div className=\"sectionContent\">\r\n                                <p>Java Developer who is experienced in developing secure, asynchronous service oriented applications using frameworks such as Spring, Apache camel with intermediate experience in API Gateway</p>\r\n                            </div>\r\n                        </article>\r\n                    </section>\r\n\r\n                    <section className=\"section-container\">\r\n                        <article>\r\n                            <div className=\"sectionTitle\">\r\n                                <h1>work experience</h1>\r\n                            </div>\r\n\r\n                            <div className=\"sectionContent\">\r\n                                <h4>PROGRAMMER ANALYST, COGNIZANT TECHNOLOGY SOLUTIONS</h4>\r\n                                <ul>\r\n                                    <li>Worked on letter processing module (Microservice) which routes letter requests based on conditions defined in Apache camel.</li>\r\n                                    <li>Created a REST/SOAP UI client with utilities including a XML/JSON formatter ,Zip and Unzip ,Split and Merge.</li>\r\n                                    <li>Refactored JUNITs for an entire code base in a record span of 2 months.</li>\r\n                                    <li>performed modularization process for a EAR which was critical for the GO-LIVE of a project</li>\r\n                                    <li>Solved technical issues before GO-LIVE and identified technical and functional limiters. </li>\r\n                                    <li>Created  SOAP UI TEST SUITE projects for the account to do a shakeout test of the entire application.</li>\r\n                                    <li>Helped in creating a AutoLogInjector that automatically inserts logs at important portions of the code</li>\r\n                                    <li>Helped in the development of a standalone tool to identify duplicate bean declarations.</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"sectionContent\">\r\n                                <h4>Associate Software Developer,Banca Sella SPA</h4>\r\n                                <ul>\r\n                                    <li>Managed InternetBanking application for Banca Sella</li>\r\n                                    <li>Worked on React-JS and spring backed Java Backend</li>\r\n                                </ul>\r\n                            </div>\r\n                        </article>\r\n                    </section>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css'\nimport MenuBar from './components/menubar/Menubar'\nimport SideDrawer from './components/sidedrawer/sideDrawer'\nimport BackDrop from './components/backdrop/backDrop'\nimport Projects from './pages/projects/Projects'\nimport Home from './pages/Home/Home'\nimport LoadingIndicator from './components/spinner/spinner'\n\nimport { Route, MemoryRouter as Router } from 'react-router-dom';\nimport Resume from './pages/resume/Resume'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawOpen: false,\n      showSpinner: false,\n    }\n  }\n  toggleDrawer = () => {\n    this.setState((props) => { return { drawOpen: !props.drawOpen } });\n  }\n  toggleSpinner = () => {\n    this.setState((props) => { return { showSpinner: !props.showSpinner } });\n  }\n  render() {\n    let backDrop = null;\n    if (this.state.drawOpen) {\n      backDrop = <BackDrop toggleDrawer={this.toggleDrawer} />\n    }\n\n    let pageActions = {\n      toggleDrawer: this.toggleDrawer,\n      toggleSpinner: this.toggleSpinner\n    }\n\n    return (\n      this.state.showSpinner ?\n        <LoadingIndicator/>\n        :\n        <Router>\n          <div className=\"app\" style={{ \"height\": \"100%\" }}>\n            <MenuBar pageActions={pageActions} />\n            <SideDrawer pageActions={pageActions} openOrNot={this.state.drawOpen} />\n            {backDrop}\n            <Route path=\"/\" component={App}>\n            <Route path=\"/\"\n                exact\n                component={Home} />\n              <Route path=\"/resume\"\n                exact\n                component={Resume} />\n              <Route path=\"/projects\"\n                exact\n                component={Projects} />\n            </Route>\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}