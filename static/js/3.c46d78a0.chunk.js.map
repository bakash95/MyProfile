{"version":3,"sources":["components/chat/img/close_icon.svg","components/chat/img/send_icon.svg","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/chat/SendComp.js","components/chat/Chat.js"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","SendComp","props","callBack","event","key","setState","currentMessage","target","value","sendMessage","refs","input","message","state","keyPress","e","keyCode","className","type","ref","onKeyDown","this","onChange","src","send","alt","onClick","PureComponent","Chat","messObject","messages","websocket","closedChat","closedChatMessage","close","connectURL","basepathDEV","WebSocket","onmessage","data","onclose","code","onerror","scrollToView","scrollIntoView","behavior","closeChat","map","index","mine"],"mappings":"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","file":"static/js/3.c46d78a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close_icon.8937407b.svg\";","module.exports = __webpack_public_path__ + \"static/media/send_icon.d6d8fbc4.svg\";","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { PureComponent } from 'react'\r\nimport send from './img/send_icon.svg'\r\n\r\nclass SendComp extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    callBack = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.sendMessage();\r\n            return;\r\n        }\r\n        this.setState({ currentMessage: event.target.value });\r\n    }\r\n\r\n    sendMessage = () => {\r\n        this.refs.input.value = \"\"\r\n        let message = this.state.currentMessage\r\n        if (message && message !== \"\") {\r\n            this.props.sendMessage(message);\r\n            this.setState({ currentMessage: \"\" })\r\n        }\r\n    }\r\n\r\n    keyPress = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.sendMessage();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chatRoom\">\r\n                <input type=\"text\" className=\"chatTextbox\" ref=\"input\" onKeyDown={this.keyPress} onChange={this.callBack} />\r\n                <img className=\"chatSend\" src={send} alt=\"send\" onClick={this.sendMessage} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendComp","import React, { PureComponent } from 'react'\r\n\r\nimport close from './img/close_icon.svg'\r\n\r\nimport SendComp from './SendComp'\r\nimport { basepathDEV } from '../../apiCaller'\r\nimport './css/chat.css'\r\n\r\nexport default class Chat extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            currentMessage: '',\r\n            websocket: null,\r\n            closedChat: false,\r\n            closedChatMessage: 'Technical Error',\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.state.websocket.close();\r\n    }\r\n\r\n    componentDidMount() {\r\n        let connectURL = basepathDEV('wss') + '/profile'\r\n        let websocket = new WebSocket(connectURL);\r\n        websocket.onmessage = (event) => {\r\n            let messObject = {\r\n                \"message\": event.data,\r\n                \"mine\": false\r\n            }\r\n            this.setState({ messages: [...this.state.messages, messObject] })\r\n        };\r\n\r\n        websocket.onclose = (event) => {\r\n            if (event.code !== 1006)\r\n                this.setState({ closedChat: true, closedChatMessage: \"Sorry your chat timed out as there was no input\" });\r\n            else\r\n                this.setState({ closedChat: true, closedChatMessage: \"Oops there was technical issue!\" });\r\n        }\r\n\r\n        websocket.onerror = (event) => {\r\n            this.setState({ closedChat: true, closedChatMessage: \"Oops there was technical issue!\" });\r\n        }\r\n\r\n        this.setState({ websocket: websocket })\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.refs.scrollToView && this.refs.scrollToView.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    sendMessage = (message) => {\r\n        let messObject = {\r\n            \"message\": message,\r\n            \"mine\": true\r\n        }\r\n        this.setState({ messages: [...this.state.messages, messObject] });\r\n        this.state.websocket.send(message);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"chat_title\">\r\n                    <img className=\"close\" src={close} alt=\"close\" onClick={this.props.closeChat} />\r\n                </div>\r\n                <div className=\"chatContent\">\r\n                    <div className=\"messages\">\r\n                        {\r\n                            this.state.messages.map((messObject, index) => {\r\n                                if (messObject.mine) {\r\n                                    return <div className=\"message\"><div className=\"self\">{messObject.message}</div></div>\r\n                                } else {\r\n                                    return <div className=\"messageTheirs\"><div className=\"self\" >{messObject.message}</div></div>\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                        <div ref=\"scrollToView\" />\r\n                    </div>\r\n                </div>\r\n                {!this.state.closedChat ? <SendComp sendMessage={this.sendMessage} /> : <span className=\"chatRoom\">{this.state.closedChatMessage}</span>}\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}